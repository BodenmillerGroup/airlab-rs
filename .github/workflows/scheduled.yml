permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron:  '7 7 * * *'
env:
  DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"
  SERVICE_TOKEN_DURATION_SEC: "1800"
  SERVICE_WEB_FOLDER: "web-airlab/"
  SERVICE_DATA_PATH: "data/airlab-data"
  SERVICE_PWD_KEY: "KEY"
  SERVICE_TOKEN_KEY: "SGVsbG8gd29ybGQt"
  SERVICE_DB_URL: "postgres://postgres:postgres@localhost:5432/postgres"
  SERVICE_EMAIL_FROM_ADDRESS: "admin@example.com"
  SERVICE_EMAIL_FROM_NAME: "Admin Example"
  SERVICE_EMAIL_TOKEN: "EMAIL_TOKEN"
  SERVICE_EMAIL_ADDRESS: "SERIVCE_PROVIDER"
  SERVICE_LOG_AGGR_URL: "http://127.0.0.1:9124/api/v1/logstream/airlab"
  SERVICE_RESET_PWD_URL: "https://127.0.0.1:9080/reset-password"
  SERVICE_HOST_ADDR: "127.0.0.1"
  SERVICE_HOST_PORT: "9080"
  SUPER_USER: "admin@example.com"
  SUPER_USER_PWD: "changeit"
  SETUP_DEMO_GROUP: "false"
name: rolling
jobs:
  nightly:
    runs-on: ubuntu-latest
    name: ubuntu / nightly
    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Run SQLx Migrations
        run: |
          cargo install sqlx-cli
          sqlx migrate run --source crates/airlab-web/migrations
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets
  update:
    runs-on: ubuntu-latest
    name: ubuntu / beta / updated
    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Run SQLx Migrations
        run: |
          cargo install sqlx-cli
          sqlx migrate run --source crates/airlab-web/migrations
      - name: Install beta
        if: hashFiles('Cargo.lock') != ''
        uses: dtolnay/rust-toolchain@beta
      - name: cargo update
        if: hashFiles('Cargo.lock') != ''
        run: cargo update
      - name: cargo test
        if: hashFiles('Cargo.lock') != ''
        run: cargo test --locked --all-features --all-targets
        env:
          RUSTFLAGS: -D deprecated
